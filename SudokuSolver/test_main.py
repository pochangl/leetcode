import copy
from itertools import product
from unittest import TestCase
from .main import Solution


class TestSolution(TestCase):
    def count_filled(self, board):
        count = 0
        for x, y in product(range(9), repeat=2):
            if board[x][y] != '.':
                count += 1
        return count

    def check_board(self, initial, board):
        num_filled = self.count_filled(board)
        self.assertEqual(num_filled, 81)

        for x, y in product(range(9), repeat=2):
            value = board[x][y]

            # 檢查axis
            for index in range(9):
                if index != x:
                    self.assertNotEqual(board[index][y], value)
                if index != y:
                    self.assertNotEqual(board[x][index], value)

            # 檢查 block
            base_x = (x // 3) * 3
            base_y = (y // 3) * 3
            for dx, dy in product(range(3), repeat=2):
                target_x = base_x + dx
                target_y = base_y + dy
                if x != target_x or y != target_y:
                    self.assertNotEqual(board[target_x][target_y], value)

            for row1, row2 in zip(initial, board):
                for init, value in zip(row1, row2):
                    if init != '.':
                        self.assertEqual(init, value)

    def run_test(self, initial, expect):
        data = copy.deepcopy(initial)
        Solution().solveSudoku(data)
        self.assertEqual(data, expect)
        self.check_board(initial=initial, board=data)

    def test_case(self):
        '''
            test case from problem
        '''
        data = [
            ['5', '3', '.', '.', '7', '.', '.', '.', '.'],
            ['6', '.', '.', '1', '9', '5', '.', '.', '.'],
            ['.', '9', '8', '.', '.', '.', '.', '6', '.'],
            ['8', '.', '.', '.', '6', '.', '.', '.', '3'],
            ['4', '.', '.', '8', '.', '3', '.', '.', '1'],
            ['7', '.', '.', '.', '2', '.', '.', '.', '6'],
            ['.', '6', '.', '.', '.', '.', '2', '8', '.'],
            ['.', '.', '.', '4', '1', '9', '.', '.', '5'],
            ['.', '.', '.', '.', '8', '.', '.', '7', '9'],
        ]
        expect = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '7', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]

        self.run_test(data, expect)

    def test_case1(self):
        '''
        簡單的 case
        '''
        data = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '.', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]
        expect = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '7', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]

        self.run_test(data, expect)

    def test_case2(self):
        '''
        橫向簡單的case
        '''
        data = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['.', '.', '.', '.', '.', '.', '.', '.', '.'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]
        expect = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '7', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]

        self.run_test(data, expect)

    def test_case3(self):
        '''
        縱向簡單的case
        '''
        data = [
            ['5', '.', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '.', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '.', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '.', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '.', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '.', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '.', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '.', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '.', '5', '2', '8', '6', '1', '7', '9'],
        ]

        expect = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '7', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]

        self.run_test(data, expect)

    def test_case4(self):
        '''
            測單區塊
        '''
        data = [
            ['.', '.', '.', '6', '7', '8', '9', '1', '2'],
            ['.', '.', '.', '1', '9', '5', '3', '4', '8'],
            ['.', '.', '.', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]
        expect = [
            ['5', '3', '4', '6', '7', '8', '9', '1', '2'],
            ['6', '7', '2', '1', '9', '5', '3', '4', '8'],
            ['1', '9', '8', '3', '4', '2', '5', '6', '7'],
            ['8', '5', '9', '7', '6', '1', '4', '2', '3'],
            ['4', '2', '6', '8', '5', '3', '7', '9', '1'],
            ['7', '1', '3', '9', '2', '4', '8', '5', '6'],
            ['9', '6', '1', '5', '3', '7', '2', '8', '4'],
            ['2', '8', '7', '4', '1', '9', '6', '3', '5'],
            ['3', '4', '5', '2', '8', '6', '1', '7', '9'],
        ]

        self.run_test(data, expect)

    def test_case_hardest(self):
        '''
            source: https://www.conceptispuzzles.com/index.aspx?uri=info/article/424
        '''
        data = [
            ['8', '.', '.', '.', '.', '.', '.', '.', '.'],
            ['.', '.', '3', '6', '.', '.', '.', '.', '.'],
            ['.', '7', '.', '.', '9', '.', '2', '.', '.'],
            ['.', '5', '.', '.', '.', '7', '.', '.', '.'],
            ['.', '.', '.', '.', '4', '5', '7', '.', '.'],
            ['.', '.', '.', '1', '.', '.', '.', '3', '.'],
            ['.', '.', '1', '.', '.', '.', '.', '6', '8'],
            ['.', '.', '8', '5', '.', '.', '.', '1', '.'],
            ['.', '9', '.', '.', '.', '.', '4', '.', '.'],
        ]
        expect = [
            ['8', '1', '2', '7', '5', '3', '6', '4', '9'],
            ['9', '4', '3', '6', '8', '2', '1', '7', '5'],
            ['6', '7', '5', '4', '9', '1', '2', '8', '3'],
            ['1', '5', '4', '2', '3', '7', '8', '9', '6'],
            ['3', '6', '9', '8', '4', '5', '7', '2', '1'],
            ['2', '8', '7', '1', '6', '9', '5', '3', '4'],
            ['5', '2', '1', '9', '7', '4', '3', '6', '8'],
            ['4', '3', '8', '5', '2', '6', '9', '1', '7'],
            ['7', '9', '6', '3', '1', '8', '4', '5', '2']
        ]
        self.run_test(data, expect)
